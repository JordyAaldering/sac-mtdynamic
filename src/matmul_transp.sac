use Array: all except { transpose };
use CommandLine: all;
use StdIO: all;

noinline
double[n,k] transpose(double[k,n] b)
{
    MTClock::touch();

    return { [i,j] -> b[j,i] | [i,j] < [n,k] };
}

noinline
double[m,n] matmulT(double[m,k] a, double[n,k] bT)
{
    MTClock::touch();

    return { [i,j] -> sum(a[i] * bT[j]) | [i,j] < [m,n] };
}

int main()
{
    iter = String::toi(argv(argc() - 2));
    size = String::toi(argv(argc() - 1));

    a = tod(reshape([size,size], iota(size * size)));
    b = tod(reshape([size,size], iota(size * size)));
    // We only want to measure/control the multiplication part, so transpose beforehand
    bT = transpose(b);

    for (i = 0; i < iter; i += 1) {

        sec, nsec, rapl = Bench::start();
        a = matmulT(a, bT);
        Bench::stop(sec, nsec, rapl);
    }

    return toi(a[0,0]);
}
