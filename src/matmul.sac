use Array: all except { transpose };
use CommandLine: all;
use StdIO: all;

noinline
int[w,v] transpose(int[v,w] b)
{
    MTClock::touch();

    return { [i,j] -> b[j,i] | [i,j] < [w,v] };
}

noinline
int[u,w] matmul(int[u,v] a, int[w,v] bT)
{
    MTClock::touch();

    return { [i,j] -> sum(a[i] * bT[j]) | [i,j] < [u,w] };
}

int main()
{
    iter = String::toi(argv(argc() - 2));
    size = String::toi(argv(argc() - 1));

    a = reshape([size,size], iota(size * size));
    b = reshape([size,size], iota(size * size));

    for (i = 0; i < iter; i += 1) {
        sec, nsec, rapl = Bench::start();
        bT = transpose(b);
        Bench::stop(sec, nsec, rapl);

        sec, nsec, rapl = Bench::start();
        _res = matmul(a, bT);
        Bench::stop(sec, nsec, rapl);
    }

    return a[0,0];
}
